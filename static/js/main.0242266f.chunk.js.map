{"version":3,"sources":["components/navBar.jsx","components/counter.jsx","components/counters.jsx","components/item.jsx","components/items.jsx","components/app.jsx","index.js"],"names":["NavBar","state","react_default","a","createElement","className","react_router_dom","to","this","props","totalSelectedItems","setState","Component","Counter","_this","src","process","counter","item","imgUrl","alt","price","onClick","onDecrement","disabled","value","getBadgeClasses","formatValue","onIncrement","onDelete","classes","Counters","total","counters","forEach","_this2","length","map","components_counter","key","id","onReset","Item","addToCartBtnText","name","onSelectItem","selected","Items","console","log","items","i","components_item","App","CounterId","secret","handleSelectItem","updatedItem","updateItemSelectedProp","addToCart","Object","toConsumableArray","newCounter","changeTotalSelectedItems","push","action","index","indexOf","objectSpread","handleDecrement","changeValue","handleIncrement","handleReset","c","handleDelete","filter","navBar","react_router","exact","path","render","components_items","components_counters","require","newTotal","ReactDOM","app","document","getElementById"],"mappings":"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","file":"static/js/main.0242266f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n    state = {}\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark nav-style\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to=\"/onlineStore\" className=\"nav-link\">Items</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/onlineStore/shoopingCart\" className=\"nav-link nav-link-style\">Shooping cart</Link>\r\n                        <span className=\"total-selected-items\" >{this.props.totalSelectedItems}</span>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n        if(this.props.totalSelectedItems !== props.totalSelectedItems){\r\n            this.setState({totalSelectedItems: props.totalSelectedItems})\r\n        }\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    render() { \r\n        return (\r\n        <div>\r\n            <div className=\"selected-item-div width-20\">\r\n                <img \r\n                    className=\"counter-img\" \r\n                    src={process.env.PUBLIC_URL + this.props.counter.item.imgUrl} \r\n                    alt=\"\">\r\n                </img>\r\n            </div>\r\n            <div className=\"selected-item-div width-15\">\r\n                {this.props.counter.item.price}\r\n            </div>\r\n            <div className=\"selected-item-div width-20\">\r\n                <button \r\n                    onClick={() => this.props.onDecrement(this.props.counter)}\r\n                    className=\"btn btn-secondary btn-sm m-2\"\r\n                    disabled={this.props.counter.value === 1}>\r\n                    -\r\n                </button>\r\n                <span className={this.getBadgeClasses() }>{this.formatValue()}</span>\r\n                <button \r\n                    onClick={() => this.props.onIncrement(this.props.counter)} \r\n                    className=\"btn btn-secondary btn-sm m-2\">\r\n                    +\r\n                </button>\r\n                <button \r\n                    onClick={() => this.props.onDelete(this.props.counter)} \r\n                    className=\"btn btn-danger btn-sm m-2\">\r\n                    delete\r\n                </button>\r\n            </div>\r\n            <div className=\"selected-item-div width-15\">\r\n                {this.props.counter.value * this.props.counter.item.price}\r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n\r\n    formatValue(){\r\n        const {value} = this.props.counter;\r\n        return value === 0? 'Zero' : value;\r\n    }\r\n\r\n    getBadgeClasses(){\r\n        let classes = \"badge m-2 badge-\";\r\n        classes += this.props.counter.value === 0 ? \"warning\" : \"primary\"; \r\n        return classes;\r\n    }\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div className=\"headers\">\r\n                    <div className=\"selected-item-div width-20\">Item</div>\r\n                    <div className=\"selected-item-div width-15\">price</div>\r\n                    <div className=\"selected-item-div width-20\">Quantity</div>\r\n                    <div className=\"selected-item-div width-15\">Total</div>\r\n                </div>\r\n                {this.props.counters.length === 0 && <div>No ites selected</div>}\r\n                {this.props.counters.map(counter => \r\n                <Counter \r\n                    counter={counter} \r\n                    key={counter.id}\r\n                    onDelete={this.props.onDelete}\r\n                    onIncrement={this.props.onIncrement}\r\n                    onDecrement={this.props.onDecrement}>\r\n                </Counter>)}\r\n                {this.props.counters.length > 0 && \r\n                <button \r\n                    onClick={this.props.onReset} \r\n                    className=\"btn btn-primary btn-sm m-2\">\r\n                    Reset\r\n                </button>}\r\n                {this.props.counters.length > 0  && <div>Total: {this.total()}</div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    total = () => {\r\n        let total = 0;\r\n        this.props.counters.forEach(counter => {\r\n            total += counter.item.price * counter.value;\r\n        });\r\n        return total;\r\n    }\r\n}\r\n \r\nexport default Counters;","import React, { Component } from 'react';\r\nimport '../components.css'\r\n\r\nclass Item extends Component {\r\n    addToCartBtnText = \"Add to cart\"\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"item-container\">\r\n                <img \r\n                    className=\"item-img\" \r\n                    src={process.env.PUBLIC_URL + this.props.item.imgUrl} \r\n                    alt=\"\">\r\n                </img>\r\n                <div>Name: {this.props.item.name}</div>\r\n                <div>Price: {this.props.item.price}</div>\r\n                <button \r\n                    className=\"btn btn-primary btn-sm\"\r\n                    onClick={() => this.props.onSelectItem(this.props.item)}\r\n                    disabled={this.props.item.selected}>\r\n                    {this.props.item.selected === true ? \"Selected\" : \"Add to cart\"}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\nimport Item from './item';\r\n\r\nclass Items extends Component {\r\n    state = {  }\r\n    render() { \r\n        console.log(\"in items\");\r\n        return (\r\n            <div>\r\n                {this.props.items.map(i => \r\n                    <Item \r\n                        item={i} \r\n                        key={i.id}\r\n                        onSelectItem={this.props.onSelectItem}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Items;","import React, { Component } from 'react';\r\nimport NavBar from './navBar'\r\nimport Counters from './counters';\r\nimport Items from './items';\r\n//import Home from './home';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n    CounterId = 0;\r\n    key = \"32bc3f508cccff3481d3178079742f6c\";\r\n    secret = \"2eeb437f8c0457e3\";\r\n    state = {         \r\n        counters: [], \r\n        items: [],\r\n        totalSelectedItems: 0\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"app-container-style\">\r\n                <Router>\r\n                    <NavBar totalSelectedItems={this.state.totalSelectedItems}/>\r\n                    <Route exact path=\"/onlineStore\" render={props => \r\n                        <Items \r\n                            items={this.state.items}\r\n                            onSelectItem={this.handleSelectItem}/>}/>\r\n                    <Route path=\"/onlineStore/shoopingCart\" render={props => \r\n                        <Counters \r\n                            counters={this.state.counters}\r\n                            onIncrement={this.handleIncrement}\r\n                            onDecrement={this.handleDecrement}\r\n                            onDelete={this.handleDelete}\r\n                            onReset={this.handleReset} />}/>\r\n                    <main className=\"container\">\r\n                    </main>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        let items = require('../items.json');\r\n        this.setState(items);\r\n    }\r\n    \r\n\r\n    handleSelectItem = (item) => {\r\n        let updatedItem = this.updateItemSelectedProp(item, \"selected\");\r\n        this.addToCart(updatedItem);\r\n    }\r\n\r\n    addToCart = (item) => {\r\n        const counters = [...this.state.counters];\r\n        let newCounter = {id: this.CounterId, value: 1, item: item}\r\n        this.CounterId++;\r\n        this.changeTotalSelectedItems(\"increment\");\r\n        counters.push(newCounter);\r\n        this.setState({counters});\r\n    }\r\n\r\n    updateItemSelectedProp = (item, action) => {\r\n        const items = [...this.state.items];\r\n        let index = items.indexOf(item);\r\n        items[index] = {...items[index]};\r\n        items[index].selected = (action === \"selected\") ? true : false;\r\n        this.setState({items});\r\n        return items[index];\r\n    }\r\n\r\n    handleDecrement = (counter) => {\r\n        if(counter.value > 1){\r\n            this.changeValue(\"decrement\", counter);\r\n        }\r\n    }\r\n\r\n    handleIncrement = (counter) => {\r\n        this.changeValue(\"increment\", counter);\r\n    }\r\n\r\n    handleReset = () => {\r\n        const counters = this.state.counters.map(c => {\r\n            c.value = 1;\r\n            return c;\r\n        });\r\n        this.setState({counters});\r\n    }\r\n\r\n    handleDelete = counter => {\r\n        this.updateItemSelectedProp(counter.item, \"delete\");\r\n        const counters = this.state.counters.filter(c => c.id !== counter.id);\r\n        this.changeTotalSelectedItems(\"decrement\");\r\n        this.setState({counters});\r\n    }\r\n\r\n    changeValue = (action, counter) => {\r\n        const counters = [...this.state.counters];\r\n        let index = counters.indexOf(counter);\r\n        counters[index] = {...counters[index]};\r\n        (action === \"increment\")? counters[index].value++ : counters[index].value--;\r\n        this.setState({ counters }); \r\n    }\r\n\r\n    changeTotalSelectedItems(action){\r\n        let total = this.state.totalSelectedItems;\r\n        let newTotal = (action === \"increment\")? total+1 : total-1;\r\n        this.setState({totalSelectedItems: newTotal});\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import Counters from './components/counters';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}