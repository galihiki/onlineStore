{"version":3,"sources":["components/navBar.jsx","components/counter.jsx","components/counters.jsx","components/item.jsx","components/items.jsx","components/app.jsx","index.js"],"names":["NavBar","state","react_default","a","createElement","className","react_router_dom","to","this","props","totalSelectedItems","setState","Component","Counter","_this","src","process","counter","item","imgUrl","alt","price","onClick","onDecrement","disabled","value","formatValue","onIncrement","onDelete","Counters","total","counters","forEach","_this2","Fragment","length","map","components_counter","key","id","onReset","Item","addToCartBtnText","name","onSelectItem","selected","Items","items","i","components_item","App","CounterId","secret","handleSelectItem","updatedItem","updateItemSelectedProp","addToCart","Object","toConsumableArray","newCounter","changeTotalSelectedItems","push","action","index","indexOf","objectSpread","handleDecrement","changeValue","handleIncrement","handleReset","c","handleDelete","filter","navBar","react_router","exact","path","render","components_items","components_counters","require","newTotal","ReactDOM","app","document","getElementById"],"mappings":"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","file":"static/js/main.30b1950b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n    state = {}\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark nav-style\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link to=\"/onlineStore\" className=\"nav-link\">Items</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/onlineStore/shoopingCart\" className=\"nav-link nav-link-style\">Shooping cart</Link>\r\n                        <span className=\"total-selected-items\" >{this.props.totalSelectedItems}</span>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(props){\r\n        if(this.props.totalSelectedItems !== props.totalSelectedItems){\r\n            this.setState({totalSelectedItems: props.totalSelectedItems})\r\n        }\r\n    }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\r\n    render() { \r\n        return (\r\n        <div className=\"counter\">\r\n            <div className=\"selected-item-div width-30\">\r\n                <img \r\n                    className=\"counter-img\" \r\n                    src={process.env.PUBLIC_URL + this.props.counter.item.imgUrl} \r\n                    alt=\"\">\r\n                </img>\r\n            </div>\r\n            <div className=\"selected-item-div width-20\">\r\n                {this.props.counter.item.price}\r\n            </div>\r\n            <div className=\"selected-item-div width-30\">\r\n                <button \r\n                    onClick={() => this.props.onDecrement(this.props.counter)}\r\n                    className=\"btn btn-secondary btn-sm m-2\"\r\n                    disabled={this.props.counter.value === 1}>\r\n                    -\r\n                </button>\r\n                <span className=\"badge m-2\">{this.formatValue()}</span>\r\n                <button \r\n                    onClick={() => this.props.onIncrement(this.props.counter)} \r\n                    className=\"btn btn-secondary btn-sm m-2\">\r\n                    +\r\n                </button>\r\n                <button \r\n                    onClick={() => this.props.onDelete(this.props.counter)} \r\n                    className=\"btn btn-danger btn-sm m-2\">\r\n                    delete\r\n                </button>\r\n            </div>\r\n            <div className=\"selected-item-div width-20\">\r\n                {this.props.counter.value * this.props.counter.item.price}\r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n\r\n    formatValue(){\r\n        const {value} = this.props.counter;\r\n        return value === 0? 'Zero' : value;\r\n    }\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"counters\">\r\n                    <div className=\"headers\">\r\n                        <div className=\"selected-item-div width-30\">Item</div>\r\n                        <div className=\"selected-item-div width-20\">price</div>\r\n                        <div className=\"selected-item-div width-30\">Quantity</div>\r\n                        <div className=\"selected-item-div width-20\">Total</div>\r\n                    </div>\r\n                    {this.props.counters.length === 0 && \r\n                        <div className=\"no-items-selected\">No items selected</div>}\r\n                    {this.props.counters.map(counter => \r\n                    <Counter \r\n                        counter={counter} \r\n                        key={counter.id}\r\n                        onDelete={this.props.onDelete}\r\n                        onIncrement={this.props.onIncrement}\r\n                        onDecrement={this.props.onDecrement}>\r\n                    </Counter>)}\r\n                </div>\r\n                { this.props.counters.length > 0 &&\r\n                    <div className=\"reset shooping-cart\">\r\n                        <button \r\n                            onClick={this.props.onReset} \r\n                            className=\"btn btn-primary btn-sm m-2\">\r\n                            Reset\r\n                        </button>\r\n                    </div>}\r\n                { this.props.counters.length > 0 &&\r\n                    <div className=\"total shooping-cart\">Total: {this.total()}</div>\r\n                }\r\n            </React.Fragment>    \r\n        );\r\n    }\r\n\r\n    total = () => {\r\n        let total = 0;\r\n        this.props.counters.forEach(counter => {\r\n            total += counter.item.price * counter.value;\r\n        });\r\n        return total;\r\n    }\r\n}\r\n \r\nexport default Counters;","import React, { Component } from 'react';\r\nimport '../components.css'\r\n\r\nclass Item extends Component {\r\n    addToCartBtnText = \"Add to cart\"\r\n\r\n    render() { \r\n        return (  \r\n            <div className=\"item-container\">\r\n                <img \r\n                    className=\"item-img\" \r\n                    src={process.env.PUBLIC_URL + this.props.item.imgUrl} \r\n                    alt=\"\">\r\n                </img>\r\n                <div>Name: {this.props.item.name}</div>\r\n                <div>Price: {this.props.item.price}</div>\r\n                <button \r\n                    className=\"btn btn-primary btn-sm\"\r\n                    onClick={() => this.props.onSelectItem(this.props.item)}\r\n                    disabled={this.props.item.selected}>\r\n                    {this.props.item.selected === true ? \"Selected\" : \"Add to cart\"}\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Item;","import React, { Component } from 'react';\r\nimport Item from './item';\r\n\r\nclass Items extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                {this.props.items.map(i => \r\n                    <Item \r\n                        item={i} \r\n                        key={i.id}\r\n                        onSelectItem={this.props.onSelectItem}/>)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Items;","import React, { Component } from 'react';\r\nimport NavBar from './navBar'\r\nimport Counters from './counters';\r\nimport Items from './items';\r\n//import Home from './home';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n    CounterId = 0;\r\n    key = \"32bc3f508cccff3481d3178079742f6c\";\r\n    secret = \"2eeb437f8c0457e3\";\r\n    state = {         \r\n        counters: [], \r\n        items: [],\r\n        totalSelectedItems: 0\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"app-container-style\">\r\n                <Router>\r\n                    <NavBar totalSelectedItems={this.state.totalSelectedItems}/>\r\n                    <Route exact path=\"/onlineStore\" render={props => \r\n                        <Items \r\n                            items={this.state.items}\r\n                            onSelectItem={this.handleSelectItem}/>}/>\r\n                    <Route path=\"/onlineStore/shoopingCart\" render={props => \r\n                        <Counters \r\n                            counters={this.state.counters}\r\n                            onIncrement={this.handleIncrement}\r\n                            onDecrement={this.handleDecrement}\r\n                            onDelete={this.handleDelete}\r\n                            onReset={this.handleReset} />}/>\r\n                    <main className=\"container\">\r\n                    </main>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        let items = require('../items.json');\r\n        this.setState(items);\r\n    }\r\n    \r\n\r\n    handleSelectItem = (item) => {\r\n        let updatedItem = this.updateItemSelectedProp(item, \"selected\");\r\n        this.addToCart(updatedItem);\r\n    }\r\n\r\n    addToCart = (item) => {\r\n        const counters = [...this.state.counters];\r\n        let newCounter = {id: this.CounterId, value: 1, item: item}\r\n        this.CounterId++;\r\n        this.changeTotalSelectedItems(\"increment\");\r\n        counters.push(newCounter);\r\n        this.setState({counters});\r\n    }\r\n\r\n    updateItemSelectedProp = (item, action) => {\r\n        const items = [...this.state.items];\r\n        let index = items.indexOf(item);\r\n        items[index] = {...items[index]};\r\n        items[index].selected = (action === \"selected\") ? true : false;\r\n        this.setState({items});\r\n        return items[index];\r\n    }\r\n\r\n    handleDecrement = (counter) => {\r\n        if(counter.value > 1){\r\n            this.changeValue(\"decrement\", counter);\r\n        }\r\n    }\r\n\r\n    handleIncrement = (counter) => {\r\n        this.changeValue(\"increment\", counter);\r\n    }\r\n\r\n    handleReset = () => {\r\n        const counters = this.state.counters.map(c => {\r\n            c.value = 1;\r\n            return c;\r\n        });\r\n        this.setState({counters});\r\n    }\r\n\r\n    handleDelete = counter => {\r\n        this.updateItemSelectedProp(counter.item, \"delete\");\r\n        const counters = this.state.counters.filter(c => c.id !== counter.id);\r\n        this.changeTotalSelectedItems(\"decrement\");\r\n        this.setState({counters});\r\n    }\r\n\r\n    changeValue = (action, counter) => {\r\n        const counters = [...this.state.counters];\r\n        let index = counters.indexOf(counter);\r\n        counters[index] = {...counters[index]};\r\n        (action === \"increment\")? counters[index].value++ : counters[index].value--;\r\n        this.setState({ counters }); \r\n    }\r\n\r\n    changeTotalSelectedItems(action){\r\n        let total = this.state.totalSelectedItems;\r\n        let newTotal = (action === \"increment\")? total+1 : total-1;\r\n        this.setState({totalSelectedItems: newTotal});\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n//import Counters from './components/counters';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}